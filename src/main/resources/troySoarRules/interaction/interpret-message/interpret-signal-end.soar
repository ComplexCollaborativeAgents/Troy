##!
# @file
#
# @created smohan 20170811

sp {interpret-message*propose*interpret-signal-end
    (state <s> ^name interpret-message
               ^superstate.operator <sop>)
    (<sop> ^name interpret-message
          ^message <m1>)
    (<m1>	^type signal-end)
-->
	(<s>	^operator <op> +)
 	(<op>	^name interpret-signal-end
        	^message <m1>)
}

sp {interpret-message*apply*interpret-signal-end*terminate
	(state <s>	^name interpret-message
            	^operator <op>
             	^superstate <ss>
              	^epmem.present-id <pid>
 				^interaction.stack.segment <seg>)
 	(<op>	^name interpret-signal-end
        	^message <m1>)
  	(<seg>	^next <nseg>)
-->
	(<ss>	^modify-segment <nseg>
       		^modifications <meg>
         	^terminate-segment <seg>)
 	(<meg>	^purpose learn
         	^knowledge-type policy
          	^satisfaction learning-event
            ^processed-message <m1>)
  }
       
       
#       new-segment <seg-new>)
# 	(<ss>	^terminate-segment <seg>)
# 	(<seg-new>	^message <m1>
#         	^groundings <g>
#          	^world-enhancements <w1>
#           	^purpose learn
#            ^knowledge-type policy
#            ^satisfaction learning-event
#            ^_metadata <met>)
#  	(<met> ^episode-id <pid>)
#  }