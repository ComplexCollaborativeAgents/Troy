rank(100) => Inform(Welcome)
Agent: Inform(Welcome) -> Hi! I am Troy, your office secretary. 
rank(10)  => Inform(HowCanIHelpYou)
Agent: Inform(HowCanIHelpYou) -> You can ask me to do tasks. If I don't know how, you can train me.| What tasks can I do for you? If I don't know how, you can train me.

rank(40) Instruct(ActionCommand($1, $2)) => writeToSoar(ActionCommand, $1, $2) Inform()
rank(40) Instruct(ActionCommand($1, $2, $3)) => writeToSoar(ActionCommand, $1, $2, $3) Inform()
rank(30) Request(readOutputFromSoar) => readFromSoar($1) say($1)

User: Instruct(ActionCommand($1, $2)) <-> {Verb[$1]} {NP[$2]}.
User: Instruct(ActionCommand($1, $2, $3)) <-> {Verb[$1]} {NP[$2]} to {NP[$3]}.

Agent: Ask(UnknownConcept($1)) <-> I do not know what {$1} is. Can you please describe it?
Agent: Inform(unknown-task) <-> I'm sorry. I do not know how to do this task. Can you please train me?


Verb[print] <-> print
Verb[email] <-> email
Verb[list] <-> list
Verb[show] <-> show
NN[home-directory] <-> my home directory
NN[file] <-> file
NN[file] <-> files
NP[np(dt(all), n($1))] <-> all {NN[$1]}

Verb[put-together] <-> put together
NP[sales-brochure] <-> a sales brochure
NP[sales-document] <-> a sales document
NP[sales-proposal] <-> a sales proposal 
NP[person-shiwali] <-> Shiwali
